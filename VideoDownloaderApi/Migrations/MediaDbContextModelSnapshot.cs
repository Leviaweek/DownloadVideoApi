// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VideoDownloaderApi.Database;

#nullable disable

namespace VideoDownloaderApi.Migrations
{
    [DbContext(typeof(MediaDbContext))]
    partial class MediaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "media_type", new[] { "muxed_video", "audio" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VideoDownloaderApi.Database.Models.PhysicalYoutubeMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long?>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDownloaded")
                        .HasColumnType("boolean");

                    b.Property<int?>("Quality")
                        .HasColumnType("integer");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("YoutubeVideoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("YoutubeVideoId");

                    b.ToTable("PhysicalYoutubeMedia", "public");
                });

            modelBuilder.Entity("VideoDownloaderApi.Database.Models.YoutubeVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternalVideoId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("InternalVideoId")
                        .IsUnique();

                    b.ToTable("YoutubeVideos", "public");
                });

            modelBuilder.Entity("VideoDownloaderApi.Database.Models.YoutubeVideoLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("YoutubeVideoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("YoutubeVideoId");

                    b.ToTable("YoutubeVideoLinks", "public");
                });

            modelBuilder.Entity("VideoDownloaderApi.Database.Models.PhysicalYoutubeMedia", b =>
                {
                    b.HasOne("VideoDownloaderApi.Database.Models.YoutubeVideo", "YoutubeVideo")
                        .WithMany()
                        .HasForeignKey("YoutubeVideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YoutubeVideo");
                });

            modelBuilder.Entity("VideoDownloaderApi.Database.Models.YoutubeVideoLink", b =>
                {
                    b.HasOne("VideoDownloaderApi.Database.Models.YoutubeVideo", "YoutubeVideo")
                        .WithMany()
                        .HasForeignKey("YoutubeVideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YoutubeVideo");
                });
#pragma warning restore 612, 618
        }
    }
}
